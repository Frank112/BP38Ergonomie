#ifndef IPRODUCTLIST_H
#define IPRODUCTLIST_H

#include <QtPlugin>

/**
 * @brief The IProductList class is an interface, that can be implemented to indicate that functionality
 * for displaying and manipulating a list of products is provided.
 *
 * @author Marius Gassen
 */
class IProductList{

signals:

    /**
     * @brief createProduct A signal that can be emitted to signal that a new product should be created with the given values.
     * @param values A hashmap of values with each the column name and the corresponding value to this column.
     */
    virtual void createProduct(QHash<QString, QVariant> values) = 0;

    /**
     * @brief deleteProduct A signal that can be emitted to signal that the product with its corresponding identifier
     * should be deleted.
     * @param id The identifier of the product to be deleted.
     */
    virtual void deleteProduct(int id) = 0;

public slots:

    /**
     * @brief addProduct Add a product with the given values to the end of the list of products.
     * @param values A hashmap of values with each the column name and the corresponding value to this column.
     */
    virtual void addProduct(QHash<QString, QVariant> values) = 0;

    /**
     * @brief updateProduct Updates the corresponding product to the given values.
     * @param values A hashmap of values with each the column name and the corresponding value to this column.
     */
    virtual void updateProduct(QHash<QString, QVariant> values) = 0;

    /**
     * @brief removeProduct Removes the product with the given id from the list of products.
     * @param id The product of the activity to be removed.
     */
    virtual void removeProduct(int id) = 0;

    /**
     * @brief clearProducts Removes all products from the list of products.
     */
    virtual void clearProducts() = 0;
};

#define IProductList_iid "IProductList"

Q_DECLARE_INTERFACE(IProductList, IProductList_iid)

#endif // IPRODUCTLIST_H
